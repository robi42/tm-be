buildscript {
    ext { // @formatter:off
        dockerVersion         = '1.2'
        kotlinVersion         = '1.1.2-2'
        dokkaVersion          = '0.9.13'
        asciidoctorVersion    = '1.5.3'
        springBootVersion     = '1.5.2.RELEASE'
        springRestDocsVersion = '1.1.2.RELEASE'
        elasticsearchVersion  = '2.4.4'
        sparkVersion          = '1.6.3'
        jacksonVersion        = '2.8.7'
        jnaVersion            = '4.2.2'
        guavaVersion          = '21.0'
        commonsCsvVersion     = '1.4'
        mockitoKotlinVersion  = '1.2.0'
    } // @formatter:on
    ext['jackson.version'] = jacksonVersion

    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/snapshot' }
    }

    dependencies {
        classpath "se.transmode.gradle:gradle-docker:$dockerVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:$asciidoctorVersion"
    }
}

group = 'robi42'

apply plugin: 'docker'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.asciidoctor.gradle.asciidoctor'

ext {
    snippetsDir = file('build/generated-snippets')
}

//noinspection GroovyAssignabilityCheck
test {
    testLogging { exceptionFormat = 'full' }
    outputs.dir snippetsDir
}

asciidoctor {
    //noinspection GroovyAssignabilityCheck
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

dokka { //noinspection GroovyAssignabilityCheck
    includes = ['README.md']
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

//noinspection GroovyAssignabilityCheck
jar {
    doFirst { //noinspection GroovyAssignabilityCheck
        manifest { //noinspection GroovyAssignabilityCheck
            attributes 'Implementation-Title': project.name, 'Implementation-Version': version,
                    'Created-By': 'Robert Thurnher', 'Build-Timestamp': new Date()
        }
    }

    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'public/docs'
    }

    baseName = 'temp-munger'
    archiveName = "${baseName}.jar"
    version = '0.1.0-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

//noinspection GroovyAssignabilityCheck
configurations { //noinspection GroovyAssignabilityCheck
    compile { // Some cruft mainly being drawn in via Hadoop ecosystem which we'd rather do without.
        exclude group: 'org.apache.parquet'
        exclude group: 'org.apache.storm'
        exclude group: 'org.apache.hive'
        exclude group: 'org.apache.pig'
        exclude group: 'cascading'
        exclude group: 'hsqldb'
        exclude group: 'org.mortbay.jetty'
        exclude group: 'org.eclipse.jetty.orbit'
        exclude group: 'com.sun.jersey'
        exclude group: 'com.sun.jersey.jersey-test-framework'
        exclude group: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'tomcat', module: 'jasper-compiler'
        exclude group: 'tomcat', module: 'jasper-runtime'
    }
}

repositories {
    jcenter()
    maven { url 'http://clojars.org/repo' }
    maven { url 'http://conjars.org/repo' }
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
}

dependencies {
    // Core
    // ----
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-configuration-processor'

    compile 'io.projectreactor:reactor-bus'
    compile 'io.projectreactor.spring:reactor-spring-messaging'

    compile 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    compile "org.elasticsearch:elasticsearch-spark_2.10:$elasticsearchVersion"
    compile "org.elasticsearch.module:lang-groovy:$elasticsearchVersion"

    compile "org.apache.spark:spark-core_2.10:$sparkVersion"
    compile "org.apache.spark:spark-mllib_2.10:$sparkVersion"

    // Utilities & Extensions
    // ----------------------
    compile 'javax.inject:javax.inject:1'
    compile "net.java.dev.jna:jna:$jnaVersion"

    compile "com.google.guava:guava:$guavaVersion"
    compile "org.apache.commons:commons-csv:$commonsCsvVersion"

    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310' // java.time.*
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-scala_2.10:$jacksonVersion"

    // Dev
    // ---
//    compile 'org.springframework.boot:spring-boot-devtools'

    // Testing
    // -------
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:$springRestDocsVersion"
    testCompile "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
}

compileJava.dependsOn processResources
build.dependsOn dokka

//noinspection GroovyAssignabilityCheck
task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = project.name
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

task wrapper(type: Wrapper) { gradleVersion = '3.3' }
